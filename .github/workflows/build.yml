#
# Copyright SecureKey Technologies Inc. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
name: build
on: [push, pull_request]
jobs:
  unitTest:
    name: Unit test
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      matrix:
        os: [ubuntu-18.04, macOS-10.15]
    steps:

    - name: Setup Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - uses: actions/checkout@v1

    - name: Run unit test
      timeout-minutes: 10
      run: make unit-test

    - name: Upload coverage to Codecov
      timeout-minutes: 10
      # GitHub Actions currently only allow secret usage access during push events
      if: matrix.os == 'ubuntu-18.04'
      uses: codecov/codecov-action@v1.0.2
      with:
        token: ${{secrets.CODECOV_TOKEN}}
        file: ./coverage.txt

  unitTestWasm:
    name: Unit test wasm
    runs-on: ubuntu-18.04
    timeout-minutes: 10
    steps:

      - name: Setup Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - uses: actions/checkout@v1

      - name: Run unit test wasm
        timeout-minutes: 10
        run: make unit-test-wasm

  bddTest:
    name: BDD test
    runs-on: ubuntu-18.04
    timeout-minutes: 10
    steps:

      - name: Setup Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Setup Node.js
        uses: actions/setup-node@v1.4.0
        with:
          node-version: 12.14.x
          registry-url: "https://npm.pkg.github.com"

      - uses: actions/checkout@v1

      - name: Run BDD test
        timeout-minutes: 10
        run: |
          function logout {
            docker logout docker.pkg.github.com
          }
          trap logout EXIT
          echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com --username $GITHUB_ACTOR --password-stdin
          make bdd-test

  checks:
    name: Checks
    timeout-minutes: 10
    runs-on: ubuntu-18.04
    steps:
      - name: Setup Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13

      - uses: actions/checkout@v1

      - name: Run checks
        timeout-minutes: 10
        run: make checks

  publish:
    name: Publish images and npm packages
    if: github.event_name == 'push' && github.repository == 'hyperledger/aries-framework-go'
    needs: [checks, unitTest, unitTestWasm, bddTest]
    runs-on: ubuntu-18.04
    timeout-minutes: 10
    steps:
      - name: Setup Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Setup Node.js
        uses: actions/setup-node@v1.4.0
        with:
          node-version: 12.14.x
          registry-url: "https://npm.pkg.github.com"

      - uses: actions/checkout@v1

      - name: Publish docker images
        run: |
              function logout {
                docker logout docker.pkg.github.com
              }
              trap logout EXIT
              source ci/version_var.sh
              echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com --username $GITHUB_ACTOR --password-stdin
              make agent-rest-docker
              docker tag aries-framework-go/agent-rest:latest  docker.pkg.github.com/hyperledger/aries-framework-go/agent-rest:$AGENT_IMAGE_TAG
              docker push docker.pkg.github.com/hyperledger/aries-framework-go/agent-rest:$AGENT_IMAGE_TAG

      - name: Publish npm packages
        working-directory: ./cmd/aries-js-worker
        run: |
          source ../../ci/version_var.sh
          sed -i 's/"version": "0.0.1"/"version": "'$NPM_PKG_TAG'"/g' package.json
          npm install
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
