#
# Copyright IBM Corp, SecureKey Technologies Inc. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
version: '2'

services:

  alice.agent.example.com:
    container_name: alice.aries.example.com
    image: ${AGENT_REST_IMAGE}:${AGENT_REST_IMAGE_TAG}
    environment:
      - ARIESD_API_HOST=${ALICE_HOST}:${ALICE_API_PORT}
      - ARIESD_INBOUND_HOST=${HTTP_SCHEME}@${ALICE_HOST}:${ALICE_INBOUND_PORT}
      - ARIESD_INBOUND_HOST_EXTERNAL=${HTTP_SCHEME}@https://alice.aries.example.com:${ALICE_INBOUND_PORT}
      - ARIESD_WEBHOOK_URL=http://${ALICE_WEBHOOK_CONTAINER_NAME}:${ALICE_WEBHOOK_PORT}
      - ARIESD_DEFAULT_LABEL=alice-agent
      - ARIESD_DATABASE_TYPE=leveldb
      - ARIESD_DATABASE_PREFIX=alice
      - ARIESD_DATABASE_TIMEOUT=60
      - ARIESD_HTTP_RESOLVER=${HTTP_DID_RESOLVER}
      - ARIESD_CONTEXT_PROVIDER_URL=${CONTEXT_PROVIDER_URL}
      - TLS_CERT_FILE=/etc/tls/ec-pubCert.pem
      - TLS_KEY_FILE=/etc/tls/ec-key.pem
    volumes:
      - ../keys/tls:/etc/tls
    ports:
      - ${ALICE_INBOUND_PORT}:${ALICE_INBOUND_PORT}
      - ${ALICE_API_PORT}:${ALICE_API_PORT}
    entrypoint: ""
    command:  /bin/sh -c "cp /etc/tls/* /usr/local/share/ca-certificates/;update-ca-certificates; aries-agent-rest start"
    networks:
      - bdd_net
    depends_on:
      - file-server.example.com

  erin.agent.example.com:
    container_name: erin.aries.example.com
    image: ${AGENT_REST_IMAGE}:${AGENT_REST_IMAGE_TAG}
    environment:
      - ARIESD_API_HOST=${ERIN_HOST}:${ERIN_API_PORT}
      - ARIESD_INBOUND_HOST=${HTTP_SCHEME}@${ERIN_HOST}:${ERIN_INBOUND_PORT}
      - ARIESD_INBOUND_HOST_EXTERNAL=${HTTP_SCHEME}@https://erin.aries.example.com:${ERIN_INBOUND_PORT}
      - ARIESD_WEBHOOK_URL=http://${ERIN_WEBHOOK_CONTAINER_NAME}:${ERIN_WEBHOOK_PORT}
      - ARIESD_DEFAULT_LABEL=erin-agent
      - ARIESD_DATABASE_TYPE=leveldb
      - ARIESD_DATABASE_PREFIX=erin
      - ARIESD_DATABASE_TIMEOUT=60
      - ARIESD_HTTP_RESOLVER=${HTTP_DID_RESOLVER}
      - ARIESD_CONTEXT_PROVIDER_URL=${CONTEXT_PROVIDER_URL}
      - TLS_CERT_FILE=/etc/tls/ec-pubCert.pem
      - TLS_KEY_FILE=/etc/tls/ec-key.pem
    volumes:
      - ../keys/tls:/etc/tls
    ports:
      - ${ERIN_INBOUND_PORT}:${ERIN_INBOUND_PORT}
      - ${ERIN_API_PORT}:${ERIN_API_PORT}
    entrypoint: ""
    command:  /bin/sh -c "cp /etc/tls/* /usr/local/share/ca-certificates/;update-ca-certificates; aries-agent-rest start"
    networks:
      - bdd_net
    depends_on:
      - file-server.example.com

  bob.agent.example.com:
    container_name: bob.aries.example.com
    image: ${AGENT_REST_IMAGE}:${AGENT_REST_IMAGE_TAG}
    environment:
      - ARIESD_API_HOST=${BOB_HOST}:${BOB_API_PORT}
      - ARIESD_INBOUND_HOST=${HTTP_SCHEME}@${BOB_HOST}:${BOB_INBOUND_PORT}
      - ARIESD_INBOUND_HOST_EXTERNAL=${HTTP_SCHEME}@https://bob.aries.example.com:${BOB_INBOUND_PORT}
      - ARIESD_WEBHOOK_URL=http://${BOB_WEBHOOK_CONTAINER_NAME}:${BOB_WEBHOOK_PORT}
      - ARIESD_DATABASE_TYPE=leveldb
      - ARIESD_DATABASE_PREFIX=bob
      - ARIESD_DATABASE_TIMEOUT=60
      - ARIESD_DEFAULT_LABEL=bob-agent
      - ARIESD_HTTP_RESOLVER=${HTTP_DID_RESOLVER}
      - ARIESD_CONTEXT_PROVIDER_URL=${CONTEXT_PROVIDER_URL}
      - TLS_CERT_FILE=/etc/tls/ec-pubCert.pem
      - TLS_KEY_FILE=/etc/tls/ec-key.pem
      - ARIESD_RFC0593_AUTO_EXECUTE=true
    volumes:
      - ../keys/tls:/etc/tls
    ports:
      - ${BOB_INBOUND_PORT}:${BOB_INBOUND_PORT}
      - ${BOB_API_PORT}:${BOB_API_PORT}
    entrypoint: ""
    command:  /bin/sh -c "cp /etc/tls/* /usr/local/share/ca-certificates/;update-ca-certificates; aries-agent-rest start"
    networks:
      - bdd_net
    depends_on:
      - file-server.example.com

  alice.webhook.example.com:
    container_name: ${ALICE_WEBHOOK_CONTAINER_NAME}
    image: ${SAMPLE_WEBHOOK_IMAGE}:${SAMPLE_WEBHOOK_IMAGE_TAG}
    environment:
      - WEBHOOK_PORT=${ALICE_WEBHOOK_PORT}
    ports:
      - ${ALICE_WEBHOOK_PORT}:${ALICE_WEBHOOK_PORT}
    networks:
      - bdd_net

  bob.webhook.example.com:
    container_name: ${BOB_WEBHOOK_CONTAINER_NAME}
    image: ${SAMPLE_WEBHOOK_IMAGE}:${SAMPLE_WEBHOOK_IMAGE_TAG}
    environment:
      - WEBHOOK_PORT=${BOB_WEBHOOK_PORT}
    ports:
      - ${BOB_WEBHOOK_PORT}:${BOB_WEBHOOK_PORT}
    networks:
      - bdd_net

  erin.webhook.example.com:
    container_name: ${ERIN_WEBHOOK_CONTAINER_NAME}
    image: ${SAMPLE_WEBHOOK_IMAGE}:${SAMPLE_WEBHOOK_IMAGE_TAG}
    environment:
      - WEBHOOK_PORT=${ERIN_WEBHOOK_PORT}
    ports:
      - ${ERIN_WEBHOOK_PORT}:${ERIN_WEBHOOK_PORT}
    networks:
      - bdd_net

  carl.agent.example.com:
    container_name: carl.aries.example.com
    image: ${AGENT_REST_IMAGE}:${AGENT_REST_IMAGE_TAG}
    environment:
      - ARIESD_API_HOST=${CARL_HOST}:${CARL_API_PORT}
      - ARIESD_WEBHOOK_URL=http://${CARL_WEBHOOK_CONTAINER_NAME}:${CARL_WEBHOOK_PORT}
      - ARIESD_DEFAULT_LABEL=carl-agent
      - ARIESD_DATABASE_TYPE=leveldb
      - ARIESD_DATABASE_PREFIX=carl
      - ARIESD_DATABASE_TIMEOUT=60
      - ARIESD_OUTBOUND_TRANSPORT=${HTTP_SCHEME},${WS_SCHEME}
      - ARIESD_TRANSPORT_RETURN_ROUTE=${TRANSPORT_RETURN_OPTION_ALL}
      - ARIESD_CONTEXT_PROVIDER_URL=${CONTEXT_PROVIDER_URL}
      - ARIESD_KEY_AGREEMENT_TYPE=${CARL_KEYAGREEMENT_TYPE}
      - ARIESD_MEDIA_TYPE_PROFILES=${CARL_MEDIA_TYPE_PROFILES}
      - TLS_CERT_FILE=/etc/tls/ec-pubCert.pem
      - TLS_KEY_FILE=/etc/tls/ec-key.pem
    volumes:
      - ../keys/tls:/etc/tls
    ports:
      - ${CARL_API_PORT}:${CARL_API_PORT}
    entrypoint: ""
    command:  /bin/sh -c "cp /etc/tls/* /usr/local/share/ca-certificates/;update-ca-certificates; aries-agent-rest start"
    networks:
      - bdd_net
    depends_on:
      - file-server.example.com

  carl.webhook.example.com:
    container_name: ${CARL_WEBHOOK_CONTAINER_NAME}
    image: ${SAMPLE_WEBHOOK_IMAGE}:${SAMPLE_WEBHOOK_IMAGE_TAG}
    environment:
      - WEBHOOK_PORT=${CARL_WEBHOOK_PORT}
    ports:
      - ${CARL_WEBHOOK_PORT}:${CARL_WEBHOOK_PORT}
    networks:
      - bdd_net

  carl.router.agent.example.com:
    container_name: carl.router.aries.example.com
    image: ${AGENT_REST_IMAGE}:${AGENT_REST_IMAGE_TAG}
    environment:
      - ARIESD_API_HOST=${CARL_ROUTER_HOST}:${CARL_ROUTER_API_PORT}
      - ARIESD_INBOUND_HOST=${HTTP_SCHEME}@${CARL_ROUTER_HOST}:${CARL_ROUTER_HTTP_INBOUND_PORT},${WS_SCHEME}@${CARL_ROUTER_HOST}:${CARL_ROUTER_WS_INBOUND_PORT}
      - ARIESD_INBOUND_HOST_EXTERNAL=${HTTP_SCHEME}@https://carl.router.aries.example.com:${CARL_ROUTER_HTTP_INBOUND_PORT},${WS_SCHEME}@wss://carl.router.aries.example.com:${CARL_ROUTER_WS_INBOUND_PORT}
      - ARIESD_WEBHOOK_URL=http://${CARL_ROUTER_WEBHOOK_CONTAINER_NAME}:${CARL_ROUTER_WEBHOOK_PORT}
      - ARIESD_DATABASE_TYPE=leveldb
      - ARIESD_DATABASE_PREFIX=carl_router
      - ARIESD_DATABASE_TIMEOUT=60
      - ARIESD_DEFAULT_LABEL=carl-router-agent
      - ARIESD_OUTBOUND_TRANSPORT=${HTTP_SCHEME},${WS_SCHEME}
      - ARIESD_HTTP_RESOLVER=${HTTP_DID_RESOLVER}
      - ARIESD_KEY_AGREEMENT_TYPE=${CARL_KEYAGREEMENT_TYPE}
      - ARIESD_MEDIA_TYPE_PROFILES=${CARL_MEDIA_TYPE_PROFILES}
      - TLS_CERT_FILE=/etc/tls/ec-pubCert.pem
      - TLS_KEY_FILE=/etc/tls/ec-key.pem
    volumes:
      - ../keys/tls:/etc/tls
    ports:
      - ${CARL_ROUTER_HTTP_INBOUND_PORT}:${CARL_ROUTER_HTTP_INBOUND_PORT}
      - ${CARL_ROUTER_WS_INBOUND_PORT}:${CARL_ROUTER_WS_INBOUND_PORT}
      - ${CARL_ROUTER_API_PORT}:${CARL_ROUTER_API_PORT}
    entrypoint: ""
    command:  /bin/sh -c "cp /etc/tls/* /usr/local/share/ca-certificates/;update-ca-certificates; aries-agent-rest start"
    networks:
      - bdd_net

  carl.router.webhook.example.com:
    container_name: ${CARL_ROUTER_WEBHOOK_CONTAINER_NAME}
    image: ${SAMPLE_WEBHOOK_IMAGE}:${SAMPLE_WEBHOOK_IMAGE_TAG}
    environment:
      - WEBHOOK_PORT=${CARL_ROUTER_WEBHOOK_PORT}
    ports:
      - ${CARL_ROUTER_WEBHOOK_PORT}:${CARL_ROUTER_WEBHOOK_PORT}
    networks:
      - bdd_net

  dave.agent.example.com:
    container_name: dave.aries.example.com
    image: ${AGENT_REST_IMAGE}:${AGENT_REST_IMAGE_TAG}
    environment:
      - ARIESD_API_HOST=${DAVE_HOST}:${DAVE_API_PORT}
      - ARIESD_WEBHOOK_URL=http://${DAVE_WEBHOOK_CONTAINER_NAME}:${DAVE_WEBHOOK_PORT}
      - ARIESD_DEFAULT_LABEL=dave-agent
      - ARIESD_DATABASE_TYPE=leveldb
      - ARIESD_DATABASE_PREFIX=dave
      - ARIESD_DATABASE_TIMEOUT=60
      - ARIESD_OUTBOUND_TRANSPORT=${HTTP_SCHEME},${WS_SCHEME}
      - ARIESD_TRANSPORT_RETURN_ROUTE=${TRANSPORT_RETURN_OPTION_ALL}
      - ARIESD_CONTEXT_PROVIDER_URL=${CONTEXT_PROVIDER_URL}
      - ARIESD_KEY_AGREEMENT_TYPE=${DAVE_KEYAGREEMENT_TYPE}
      - ARIESD_MEDIA_TYPE_PROFILES=${DAVE_MEDIA_TYPE_PROFILES}
      - TLS_CERT_FILE=/etc/tls/ec-pubCert.pem
      - TLS_KEY_FILE=/etc/tls/ec-key.pem
    volumes:
      - ../keys/tls:/etc/tls
    ports:
      - ${DAVE_API_PORT}:${DAVE_API_PORT}
    entrypoint: ""
    command:  /bin/sh -c "cp /etc/tls/* /usr/local/share/ca-certificates/;update-ca-certificates; aries-agent-rest start"
    networks:
      - bdd_net
    depends_on:
      - file-server.example.com

  dave.webhook.example.com:
    container_name: ${DAVE_WEBHOOK_CONTAINER_NAME}
    image: ${SAMPLE_WEBHOOK_IMAGE}:${SAMPLE_WEBHOOK_IMAGE_TAG}
    environment:
      - WEBHOOK_PORT=${DAVE_WEBHOOK_PORT}
    ports:
      - ${DAVE_WEBHOOK_PORT}:${DAVE_WEBHOOK_PORT}
    networks:
      - bdd_net

  dave.router.agent.example.com:
    container_name: dave.router.aries.example.com
    image: ${AGENT_REST_IMAGE}:${AGENT_REST_IMAGE_TAG}
    environment:
      - ARIESD_API_HOST=${DAVE_ROUTER_HOST}:${DAVE_ROUTER_API_PORT}
      - ARIESD_INBOUND_HOST=${HTTP_SCHEME}@${DAVE_ROUTER_HOST}:${DAVE_ROUTER_HTTP_INBOUND_PORT},${WS_SCHEME}@${DAVE_ROUTER_HOST}:${DAVE_ROUTER_WS_INBOUND_PORT}
      - ARIESD_INBOUND_HOST_EXTERNAL=${HTTP_SCHEME}@https://dave.router.aries.example.com:${DAVE_ROUTER_HTTP_INBOUND_PORT},${WS_SCHEME}@wss://dave.router.aries.example.com:${DAVE_ROUTER_WS_INBOUND_PORT}
      - ARIESD_WEBHOOK_URL=http://${DAVE_ROUTER_WEBHOOK_CONTAINER_NAME}:${DAVE_ROUTER_WEBHOOK_PORT}
      - ARIESD_DATABASE_TYPE=leveldb
      - ARIESD_DATABASE_PREFIX=dave_router
      - ARIESD_DATABASE_TIMEOUT=60
      - ARIESD_DEFAULT_LABEL=dave-router-agent
      - ARIESD_OUTBOUND_TRANSPORT=${HTTP_SCHEME},${WS_SCHEME}
      - ARIESD_HTTP_RESOLVER=${HTTP_DID_RESOLVER}
      - ARIESD_KEY_AGREEMENT_TYPE=${DAVE_KEYAGREEMENT_TYPE}
      - ARIESD_MEDIA_TYPE_PROFILES=${DAVE_MEDIA_TYPE_PROFILES}
      - TLS_CERT_FILE=/etc/tls/ec-pubCert.pem
      - TLS_KEY_FILE=/etc/tls/ec-key.pem
    volumes:
      - ../keys/tls:/etc/tls
    ports:
      - ${DAVE_ROUTER_HTTP_INBOUND_PORT}:${DAVE_ROUTER_HTTP_INBOUND_PORT}
      - ${DAVE_ROUTER_WS_INBOUND_PORT}:${DAVE_ROUTER_WS_INBOUND_PORT}
      - ${DAVE_ROUTER_API_PORT}:${DAVE_ROUTER_API_PORT}
    entrypoint: ""
    command:  /bin/sh -c "cp /etc/tls/* /usr/local/share/ca-certificates/;update-ca-certificates; aries-agent-rest start"
    networks:
      - bdd_net

  dave.router.webhook.example.com:
    container_name: ${DAVE_ROUTER_WEBHOOK_CONTAINER_NAME}
    image: ${SAMPLE_WEBHOOK_IMAGE}:${SAMPLE_WEBHOOK_IMAGE_TAG}
    environment:
      - WEBHOOK_PORT=${DAVE_ROUTER_WEBHOOK_PORT}
    ports:
      - ${DAVE_ROUTER_WEBHOOK_PORT}:${DAVE_ROUTER_WEBHOOK_PORT}
    networks:
      - bdd_net

  couchdb.example.com:
    container_name: couchdb.example.com
    image: ${COUCHDB_IMAGE}:${COUCHDB_IMAGE_TAG}
    ports:
      - ${COUCHDB_PORT}:${COUCHDB_PORT}
    environment:
      - COUCHDB_USER=${COUCHDB_USERNAME}
      - COUCHDB_PASSWORD=${COUCHDB_PASSWORD}
    volumes:
      - ./couchdb-config/10-single-node.ini:/opt/couchdb/etc/local.d/config.ini
    networks:
      - bdd_net

  kms.example.com:
    container_name: kms.example.com
    image: ${KMS_REST_IMAGE}:${KMS_REST_TAG}
    environment:
      - KMS_HOST_URL=0.0.0.0:8076
      - KMS_BASE_URL=https://localhost:8076
      - KMS_TLS_CACERTS=/etc/tls/ec-cacert.pem
      - KMS_TLS_SERVE_CERT=/etc/tls/ec-pubCert.pem
      - KMS_TLS_SERVE_KEY=/etc/tls/ec-key.pem
      - KMS_DATABASE_TYPE=couchdb
      - KMS_DATABASE_URL=${COUCHDB_USERNAME}:${COUCHDB_PASSWORD}@couchdb.example.com:${COUCHDB_PORT}
      - KMS_DATABASE_PREFIX=keystore
      - KMS_SECRET_LOCK_KEY_PATH=/etc/tls/secret-lock.key
      - KMS_PRIMARY_KEY_DATABASE_TYPE=couchdb
      - KMS_PRIMARY_KEY_DATABASE_URL=${COUCHDB_USERNAME}:${COUCHDB_PASSWORD}@couchdb.example.com:${COUCHDB_PORT}
      - KMS_PRIMARY_KEY_DATABASE_PREFIX=kmspk
      - KMS_LOCAL_KMS_DATABASE_TYPE=couchdb
      - KMS_LOCAL_KMS_DATABASE_URL=${COUCHDB_USERNAME}:${COUCHDB_PASSWORD}@couchdb.example.com:${COUCHDB_PORT}
      - KMS_LOCAL_KMS_DATABASE_PREFIX=kmslocal
      - KMS_KEY_MANAGER_STORAGE_TYPE=couchdb
      - KMS_KEY_MANAGER_STORAGE_URL=${COUCHDB_USERNAME}:${COUCHDB_PASSWORD}@couchdb.example.com:${COUCHDB_PORT}
      - KMS_KEY_MANAGER_STORAGE_PREFIX=kmskm
      #- KMS_KEY_MANAGER_STORAGE_TYPE=edv
      #- KMS_KEY_MANAGER_STORAGE_URL=https://edv.example.com:8081
      - KMS_CACHE_EXPIRATION=10m
      - KMS_ZCAP_ENABLE=false
      - KMS_LOG_LEVEL=debug
    ports:
      - 8076:8076
    entrypoint: ""
    # TODO add retry for couchdb
    command: /bin/sh -c "sleep 5;kms-rest start"
    volumes:
      - ../keys/tls:/etc/tls
    depends_on:
      - couchdb.example.com
    networks:
      - bdd_net

  file-server.example.com: # file server for hosting static resources (e.g. JSON-LD contexts)
      container_name: file-server.example.com
      image: halverneus/static-file-server:latest
      environment:
        - PORT=9099
        - FOLDER=/data
        - TLS_CERT=/etc/tls/ec-pubCert.pem
        - TLS_KEY=/etc/tls/ec-key.pem
      ports:
        - "9099:9099"
      volumes:
        - ./data:/data
        - ../keys/tls:/etc/tls
      networks:
        - bdd_net

networks:
  bdd_net:
    driver: bridge
