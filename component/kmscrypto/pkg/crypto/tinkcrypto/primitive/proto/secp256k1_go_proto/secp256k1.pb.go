// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: proto/secp256k1.proto

package secp256k1_go_proto

import (
	reflect "reflect"
	sync "sync"

	proto "github.com/golang/protobuf/proto"
	common_go_proto "github.com/google/tink/go/proto/common_go_proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type BitcoinCurveType int32

const (
	BitcoinCurveType_INVALID_BITCOIN_CURVE BitcoinCurveType = 0
	BitcoinCurveType_SECP256K1             BitcoinCurveType = 2
)

// Enum value maps for BitcoinCurveType.
var (
	BitcoinCurveType_name = map[int32]string{
		0: "INVALID_BITCOIN_CURVE",
		2: "SECP256K1",
	}
	BitcoinCurveType_value = map[string]int32{
		"INVALID_BITCOIN_CURVE": 0,
		"SECP256K1":             2,
	}
)

func (x BitcoinCurveType) Enum() *BitcoinCurveType {
	p := new(BitcoinCurveType)
	*p = x
	return p
}

func (x BitcoinCurveType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BitcoinCurveType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_secp256k1_proto_enumTypes[0].Descriptor()
}

func (BitcoinCurveType) Type() protoreflect.EnumType {
	return &file_proto_secp256k1_proto_enumTypes[0]
}

func (x BitcoinCurveType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BitcoinCurveType.Descriptor instead.
func (BitcoinCurveType) EnumDescriptor() ([]byte, []int) {
	return file_proto_secp256k1_proto_rawDescGZIP(), []int{0}
}

type Secp256K1SignatureEncoding int32

const (
	Secp256K1SignatureEncoding_UNKNOWN_BITCOIN_ENCODING Secp256K1SignatureEncoding = 0
	Secp256K1SignatureEncoding_Bitcoin_IEEE_P1363       Secp256K1SignatureEncoding = 1
	Secp256K1SignatureEncoding_Bitcoin_DER              Secp256K1SignatureEncoding = 2
)

// Enum value maps for Secp256K1SignatureEncoding.
var (
	Secp256K1SignatureEncoding_name = map[int32]string{
		0: "UNKNOWN_BITCOIN_ENCODING",
		1: "Bitcoin_IEEE_P1363",
		2: "Bitcoin_DER",
	}
	Secp256K1SignatureEncoding_value = map[string]int32{
		"UNKNOWN_BITCOIN_ENCODING": 0,
		"Bitcoin_IEEE_P1363":       1,
		"Bitcoin_DER":              2,
	}
)

func (x Secp256K1SignatureEncoding) Enum() *Secp256K1SignatureEncoding {
	p := new(Secp256K1SignatureEncoding)
	*p = x
	return p
}

func (x Secp256K1SignatureEncoding) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Secp256K1SignatureEncoding) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_secp256k1_proto_enumTypes[1].Descriptor()
}

func (Secp256K1SignatureEncoding) Type() protoreflect.EnumType {
	return &file_proto_secp256k1_proto_enumTypes[1]
}

func (x Secp256K1SignatureEncoding) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Secp256K1SignatureEncoding.Descriptor instead.
func (Secp256K1SignatureEncoding) EnumDescriptor() ([]byte, []int) {
	return file_proto_secp256k1_proto_rawDescGZIP(), []int{1}
}

type Secp256K1Params struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HashType common_go_proto.HashType   `protobuf:"varint,1,opt,name=hash_type,json=hashType,proto3,enum=google.crypto.tink.HashType" json:"hash_type,omitempty"`
	Curve    BitcoinCurveType           `protobuf:"varint,2,opt,name=curve,proto3,enum=google.crypto.tink.BitcoinCurveType" json:"curve,omitempty"`
	Encoding Secp256K1SignatureEncoding `protobuf:"varint,3,opt,name=encoding,proto3,enum=google.crypto.tink.Secp256K1SignatureEncoding" json:"encoding,omitempty"`
}

func (x *Secp256K1Params) Reset() {
	*x = Secp256K1Params{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_secp256k1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Secp256K1Params) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Secp256K1Params) ProtoMessage() {}

func (x *Secp256K1Params) ProtoReflect() protoreflect.Message {
	mi := &file_proto_secp256k1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Secp256K1Params.ProtoReflect.Descriptor instead.
func (*Secp256K1Params) Descriptor() ([]byte, []int) {
	return file_proto_secp256k1_proto_rawDescGZIP(), []int{0}
}

func (x *Secp256K1Params) GetHashType() common_go_proto.HashType {
	if x != nil {
		return x.HashType
	}
	return common_go_proto.HashType_UNKNOWN_HASH
}

func (x *Secp256K1Params) GetCurve() BitcoinCurveType {
	if x != nil {
		return x.Curve
	}
	return BitcoinCurveType_INVALID_BITCOIN_CURVE
}

func (x *Secp256K1Params) GetEncoding() Secp256K1SignatureEncoding {
	if x != nil {
		return x.Encoding
	}
	return Secp256K1SignatureEncoding_UNKNOWN_BITCOIN_ENCODING
}

type Secp256K1PublicKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version uint32           `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Params  *Secp256K1Params `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	X       []byte           `protobuf:"bytes,3,opt,name=x,proto3" json:"x,omitempty"`
	Y       []byte           `protobuf:"bytes,4,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *Secp256K1PublicKey) Reset() {
	*x = Secp256K1PublicKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_secp256k1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Secp256K1PublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Secp256K1PublicKey) ProtoMessage() {}

func (x *Secp256K1PublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_proto_secp256k1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Secp256K1PublicKey.ProtoReflect.Descriptor instead.
func (*Secp256K1PublicKey) Descriptor() ([]byte, []int) {
	return file_proto_secp256k1_proto_rawDescGZIP(), []int{1}
}

func (x *Secp256K1PublicKey) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Secp256K1PublicKey) GetParams() *Secp256K1Params {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *Secp256K1PublicKey) GetX() []byte {
	if x != nil {
		return x.X
	}
	return nil
}

func (x *Secp256K1PublicKey) GetY() []byte {
	if x != nil {
		return x.Y
	}
	return nil
}

type Secp256K1PrivateKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version   uint32              `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	PublicKey *Secp256K1PublicKey `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	KeyValue  []byte              `protobuf:"bytes,3,opt,name=key_value,json=keyValue,proto3" json:"key_value,omitempty"`
}

func (x *Secp256K1PrivateKey) Reset() {
	*x = Secp256K1PrivateKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_secp256k1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Secp256K1PrivateKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Secp256K1PrivateKey) ProtoMessage() {}

func (x *Secp256K1PrivateKey) ProtoReflect() protoreflect.Message {
	mi := &file_proto_secp256k1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Secp256K1PrivateKey.ProtoReflect.Descriptor instead.
func (*Secp256K1PrivateKey) Descriptor() ([]byte, []int) {
	return file_proto_secp256k1_proto_rawDescGZIP(), []int{2}
}

func (x *Secp256K1PrivateKey) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Secp256K1PrivateKey) GetPublicKey() *Secp256K1PublicKey {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *Secp256K1PrivateKey) GetKeyValue() []byte {
	if x != nil {
		return x.KeyValue
	}
	return nil
}

type Secp256K1KeyFormat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params *Secp256K1Params `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *Secp256K1KeyFormat) Reset() {
	*x = Secp256K1KeyFormat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_secp256k1_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Secp256K1KeyFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Secp256K1KeyFormat) ProtoMessage() {}

func (x *Secp256K1KeyFormat) ProtoReflect() protoreflect.Message {
	mi := &file_proto_secp256k1_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Secp256K1KeyFormat.ProtoReflect.Descriptor instead.
func (*Secp256K1KeyFormat) Descriptor() ([]byte, []int) {
	return file_proto_secp256k1_proto_rawDescGZIP(), []int{3}
}

func (x *Secp256K1KeyFormat) GetParams() *Secp256K1Params {
	if x != nil {
		return x.Params
	}
	return nil
}

var File_proto_secp256k1_proto protoreflect.FileDescriptor

var file_proto_secp256k1_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x63, 0x70, 0x32, 0x35, 0x36, 0x6b,
	0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x74, 0x69, 0x6e, 0x6b, 0x1a, 0x12, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xd4, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x63, 0x70, 0x32, 0x35, 0x36, 0x4b, 0x31, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x39, 0x0a, 0x09, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x74, 0x69, 0x6e, 0x6b, 0x2e, 0x48, 0x61, 0x73, 0x68,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x68, 0x61, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3a,
	0x0a, 0x05, 0x63, 0x75, 0x72, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x74, 0x69,
	0x6e, 0x6b, 0x2e, 0x42, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x43, 0x75, 0x72, 0x76, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x05, 0x63, 0x75, 0x72, 0x76, 0x65, 0x12, 0x4a, 0x0a, 0x08, 0x65, 0x6e,
	0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x74, 0x69, 0x6e,
	0x6b, 0x2e, 0x53, 0x65, 0x63, 0x70, 0x32, 0x35, 0x36, 0x4b, 0x31, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x65, 0x6e,
	0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x87, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x63, 0x70, 0x32,
	0x35, 0x36, 0x6b, 0x31, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x74, 0x69, 0x6e, 0x6b, 0x2e, 0x53, 0x65, 0x63,
	0x70, 0x32, 0x35, 0x36, 0x4b, 0x31, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x79,
	0x22, 0x93, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x63, 0x70, 0x32, 0x35, 0x36, 0x6b, 0x31, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x74, 0x69, 0x6e, 0x6b, 0x2e, 0x53, 0x65, 0x63, 0x70,
	0x32, 0x35, 0x36, 0x6b, 0x31, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x09,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x6b, 0x65, 0x79,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6b, 0x65,
	0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x51, 0x0a, 0x12, 0x53, 0x65, 0x63, 0x70, 0x32, 0x35,
	0x36, 0x4b, 0x31, 0x4b, 0x65, 0x79, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x3b, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x74, 0x69, 0x6e,
	0x6b, 0x2e, 0x53, 0x65, 0x63, 0x70, 0x32, 0x35, 0x36, 0x4b, 0x31, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2a, 0x3c, 0x0a, 0x10, 0x42, 0x69, 0x74,
	0x63, 0x6f, 0x69, 0x6e, 0x43, 0x75, 0x72, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a,
	0x15, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x42, 0x49, 0x54, 0x43, 0x4f, 0x49, 0x4e,
	0x5f, 0x43, 0x55, 0x52, 0x56, 0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x45, 0x43, 0x50,
	0x32, 0x35, 0x36, 0x4b, 0x31, 0x10, 0x02, 0x2a, 0x63, 0x0a, 0x1a, 0x53, 0x65, 0x63, 0x70, 0x32,
	0x35, 0x36, 0x4b, 0x31, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x45, 0x6e, 0x63,
	0x6f, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x18, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x5f, 0x42, 0x49, 0x54, 0x43, 0x4f, 0x49, 0x4e, 0x5f, 0x45, 0x4e, 0x43, 0x4f, 0x44, 0x49, 0x4e,
	0x47, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x42, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x49,
	0x45, 0x45, 0x45, 0x5f, 0x50, 0x31, 0x33, 0x36, 0x33, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x42,
	0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x44, 0x45, 0x52, 0x10, 0x02, 0x42, 0x51, 0x0a, 0x1c,
	0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x2e, 0x74, 0x69, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2f,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x74, 0x69, 0x6e, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x63,
	0x70, 0x32, 0x35, 0x36, 0x6b, 0x31, 0x5f, 0x67, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_secp256k1_proto_rawDescOnce sync.Once
	file_proto_secp256k1_proto_rawDescData = file_proto_secp256k1_proto_rawDesc
)

func file_proto_secp256k1_proto_rawDescGZIP() []byte {
	file_proto_secp256k1_proto_rawDescOnce.Do(func() {
		file_proto_secp256k1_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_secp256k1_proto_rawDescData)
	})
	return file_proto_secp256k1_proto_rawDescData
}

var file_proto_secp256k1_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_secp256k1_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_secp256k1_proto_goTypes = []interface{}{
	(BitcoinCurveType)(0),           // 0: google.crypto.tink.BitcoinCurveType
	(Secp256K1SignatureEncoding)(0), // 1: google.crypto.tink.Secp256K1SignatureEncoding
	(*Secp256K1Params)(nil),         // 2: google.crypto.tink.Secp256K1Params
	(*Secp256K1PublicKey)(nil),      // 3: google.crypto.tink.Secp256k1PublicKey
	(*Secp256K1PrivateKey)(nil),     // 4: google.crypto.tink.Secp256k1PrivateKey
	(*Secp256K1KeyFormat)(nil),      // 5: google.crypto.tink.Secp256K1KeyFormat
	(common_go_proto.HashType)(0),   // 6: google.crypto.tink.HashType
}
var file_proto_secp256k1_proto_depIdxs = []int32{
	6, // 0: google.crypto.tink.Secp256K1Params.hash_type:type_name -> google.crypto.tink.HashType
	0, // 1: google.crypto.tink.Secp256K1Params.curve:type_name -> google.crypto.tink.BitcoinCurveType
	1, // 2: google.crypto.tink.Secp256K1Params.encoding:type_name -> google.crypto.tink.Secp256K1SignatureEncoding
	2, // 3: google.crypto.tink.Secp256k1PublicKey.params:type_name -> google.crypto.tink.Secp256K1Params
	3, // 4: google.crypto.tink.Secp256k1PrivateKey.public_key:type_name -> google.crypto.tink.Secp256k1PublicKey
	2, // 5: google.crypto.tink.Secp256K1KeyFormat.params:type_name -> google.crypto.tink.Secp256K1Params
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_proto_secp256k1_proto_init() }
func file_proto_secp256k1_proto_init() {
	if File_proto_secp256k1_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_secp256k1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Secp256K1Params); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_secp256k1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Secp256K1PublicKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_secp256k1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Secp256K1PrivateKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_secp256k1_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Secp256K1KeyFormat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_secp256k1_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_secp256k1_proto_goTypes,
		DependencyIndexes: file_proto_secp256k1_proto_depIdxs,
		EnumInfos:         file_proto_secp256k1_proto_enumTypes,
		MessageInfos:      file_proto_secp256k1_proto_msgTypes,
	}.Build()
	File_proto_secp256k1_proto = out.File
	file_proto_secp256k1_proto_rawDesc = nil
	file_proto_secp256k1_proto_goTypes = nil
	file_proto_secp256k1_proto_depIdxs = nil
}
